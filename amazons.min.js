class Amazons{static get CELL_EMPTY(){return 0}static get CELL_WHITE(){return 1}static get CELL_BLACK(){return 2}static get CELL_ARROW(){return 4}static get STATE_WHITE(){return 0}static get STATE_BLACK(){return 1}static get STATE_WHITE_WON(){return 2}static get STATE_BLACK_WON(){return 4}static get DIRECTIONS(){return[[0,1],[0,-1],[1,0],[-1,0],[1,1],[-1,-1],[1,-1],[-1,1]]}constructor(t=null,e={}){this.config={boardWidth:10,boardHeight:10,whitePieces:[[0,6],[3,9],[6,9],[9,6]],blackPieces:[[0,3],[3,0],[6,0],[9,3]]},Object.assign(this.config,e),this.notation={},this.rowNotation=[],this.colNotation=[];for(let t=this.config.boardHeight,e=1;--t>=0;++e)this.notation[e]=t,this.rowNotation[t]=e;for(let t=0;t<=this.config.boardWidth;++t){let e="",i=t;do{e=String.fromCharCode("A".charCodeAt(0)+i%26)+e,i=(i-i%26)/26,--i}while(i>=0);this.notation[e]=t,this.colNotation[t]=e}this.config.whitePieces=this.config.whitePieces.map(t=>"string"==typeof t||t instanceof String?this.cellToIndex(t):t),this.config.blackPieces=this.config.blackPieces.map(t=>"string"==typeof t||t instanceof String?this.cellToIndex(t):t),null!==t?this.load(t):this.clear()}clear(){this._board=Array(this.config.boardHeight).fill(0).map(t=>Array(this.config.boardWidth).fill(Amazons.CELL_EMPTY)),this.whitePieces=this.config.whitePieces;for(let t of this.whitePieces)this.putFromIndex(Amazons.CELL_WHITE,...t.flat(1));this.blackPieces=this.config.blackPieces;for(let t of this.blackPieces)this.putFromIndex(Amazons.CELL_BLACK,...t.flat(1));this._history=[],this.status=Amazons.STATE_WHITE}load(t){this.clear(),("string"==typeof t||t instanceof String)&&(t=t.split(",")),t.forEach(t=>this.move(t))}put(t,e){return this.putFromIndex(t,...this.cellToIndex(e))}putFromIndex(t,e,i){this._board[i][e]=t}remove(t){return this.put(Amazons.CELL_EMPTY,t)}removeFromIndex(t,e){return this.putFromIndex(Amazons.CELL_EMPTY,t,e)}move(t){return this.moveFromIndex(...this.getMoveIndex(t))}moveFromIndex(t,e,i,s,o,n){if(!this.isPlayingPiece(t,e))throw`Cell ${this.indexToCell(t,e)} (${t},${e}) does not contain a player's piece.`;if(!this.isValidMoveFromIndex(t,e,i,s,o,n))throw"Invalid move.";let r=this.turn()===Amazons.STATE_WHITE;this.putFromIndex(r?Amazons.CELL_WHITE:Amazons.CELL_BLACK,i,s),this.removeFromIndex(t,e),this.putFromIndex(Amazons.CELL_ARROW,o,n);let a=[];for(let o of r?this.whitePieces:this.blackPieces)a.push(o[0]===t&&o[1]===e?[i,s]:o);r?this.whitePieces=a:this.blackPieces=a;let h=!0;for(let t of r?this.blackPieces:this.whitePieces)this.isSurrounded(...t)||(h=!1);this.status=r?h?Amazons.STATE_WHITE_WON:Amazons.STATE_BLACK:h?Amazons.STATE_BLACK_WON:Amazons.STATE_WHITE,this._history.push(`${this.indexToCell(t,e)}:${this.indexToCell(i,s)}:${this.indexToCell(o,n)}`)}board(){return this._board}ascii(){let t="+-"+Array(this._board.length).fill("-").join("-")+"-+";return t+"\n"+this._board.map(t=>`| ${t.map(t=>{switch(t){case Amazons.CELL_EMPTY:return".";case Amazons.CELL_WHITE:return"W";case Amazons.CELL_BLACK:return"B";case Amazons.CELL_ARROW:return"O"}}).join(" ")} |`).join("\n")+"\n"+t}state(){return this.status}gameOver(){return this.status===Amazons.STATE_WHITE_WON||this.status===Amazons.STATE_BLACK_WON}turn(){return this.status!==Amazons.STATE_WHITE_WON&&this.status!==Amazons.STATE_BLACK_WON?this.status:null}history(){return this._history}moves(){return this.movesIndex().map(t=>this.indexToCell(t[0],t[1])+":"+this.indexToCell(t[2],t[3])+":"+this.indexToCell(t[4],t[5]))}movesIndex(){if(this.gameOver())return null;let t=[];return t=(this.status===Amazons.STATE_WHITE?this.whitePieces:this.blackPieces).map(t=>this.getLineOfSight(...t).map(e=>this.getLineOfSight(...e,...t).map(i=>[...t,...e,...i])).flat(1)).flat(1)}get(t){return this.getFromIndex(this.cellToIndex(t))}getFromIndex(t,e){return void 0!==this._board[e]?this._board[e][t]:null}isPlayingPiece(t,e){return this.getFromIndex(t,e)===(this.status===Amazons.STATE_WHITE?Amazons.CELL_WHITE:Amazons.CELL_BLACK)}isEmpty(t,e){return this.getFromIndex(t,e)===Amazons.CELL_EMPTY}isValidMove(t){return this.isValidMoveFromIndex(...this.getMoveIndex(t))}isValidMoveFromIndex(t,e,i,s,o,n){return this.hasLineOfSight(t,e,i,s)&&this.hasLineOfSight(i,s,o,n,t,e)}isSurrounded(t,e){for(let i of Amazons.DIRECTIONS)if(this.isEmpty(t+i[0],e+i[1]))return!1;return!0}getLineOfSight(t,e,i=null,s=null){let o=[];for(let n of Amazons.DIRECTIONS)for(let r=t+n[0],a=e+n[1];r===i&&a===s||this.isEmpty(r,a);r+=n[0],a+=n[1])o.push([r,a]);return o}hasLineOfSight(t,e,i,s,o=null,n=null){let r=t==i?0:t>i?-1:1,a=e==s?0:e>s?-1:1;if(0!==r&&0!==a&&Math.abs(r)!==Math.abs(a))return!1;for(let h=t+r,l=e+a;h===o&&l===n||this.isEmpty(h,l);h+=r,l+=a)if(h===i&&l===s)return!0;return!1}cellToIndex(t){let e=t.match(/([A-Z]+)(\d+)/);if(3!==e.length)throw`Cordinates ${t} cannot be resolved to a board cell.`;return e.slice(1).map(t=>this.notation[t])}indexToCell(t,e){return`${this.colNotation[t]}${this.rowNotation[e]}`}getMoveCells(t){let e=t.split(":");if(3!==e.length)throw`Move ${t} cannot be resolved to a valid move.`;return e}getMoveIndex(t){return this.getMoveCells(t).map(t=>this.cellToIndex(t)).flat(1)}}